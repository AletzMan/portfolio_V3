---
import { Button } from "../Button/Button"
import Email from "../svg/Email.astro"
import Copy from "../svg/Copy.astro"
import Send from "../svg/Send.astro"

const MAIL = "alejandro.ga.dev@gmail.com"

import { getI18n } from "../../i18n/index"
const { currentLocale } = Astro
const i18n = getI18n({ currentLocale })

interface Props {
	isSecondary?: boolean
}
const { isSecondary } = Astro.props
---

<div class="mailContainer">
	<div class="tooltipCopy">
		<p>{i18n.contactSection.copyMessage}</p>
	</div>
	<Button
		id="buttonMail"
		type="Button"
		text="Email"
		title={i18n.socialMedia.email.title}
		isSecondary={isSecondary}
	>
		<Email />
	</Button>
	<div id="menuMail" class="menuMail">
		<button
			id="buttonCopy"
			class="buttonCopySend"
			title={i18n.socialMedia.email.copy.title}
			aria-label="Copiar correo electrónico"
		>
			<Copy />
			{i18n.socialMedia.email.copy.text}
		</button>
		<a
			id="buttonSend"
			class="buttonCopySend"
			href={`mailto:${MAIL}`}
			title={i18n.socialMedia.email.send.title}
			aria-label="Enviar correo electrónico"
		>
			<Send />
			{i18n.socialMedia.email.send.text}
		</a>
	</div>
</div>
<script is:inline>
	const buttonMail = document.getElementById("buttonMail")
	const menuMail = document.getElementById("menuMail")
	const tooltipCopy = document.querySelector(".tooltipCopy")

	const MAIL = "alejandro.ga.dev@gmail.com"

	const HandlerClickButton = () => {
		menuMail.classList.toggle("menuMail_active")
	}

	const HandlerClickMail = () => {
		navigator.clipboard.writeText(MAIL)
		menuMail.classList.remove("menuMail_active")
		tooltipCopy.classList.add("tooltipCopyMove")
		setTimeout(() => {
			tooltipCopy.classList.remove("tooltipCopyMove")
		}, 2000)
	}

	const HandlerBlurMenuMail = () => {
		menuMail.classList.remove("menuMail_active")
	}

	buttonMail.addEventListener("click", HandlerClickButton)
	buttonCopy.addEventListener("click", HandlerClickMail)
	buttonMail.addEventListener("blur", HandlerBlurMenuMail)
</script>
<style>
	.mailContainer {
		position: relative;
	}

	.menuMail {
		/*display: none;*/
		position: absolute;
		display: flex;
		flex-direction: column;
		row-gap: 0.25em;
		left: 0;
		top: 2em;
		width: 100%;
		max-height: 0;
		opacity: 0;
		border: none;
		border-radius: var(--borderRadius);
		background-color: var(--primaryColor);
		border: 1px solid var(--borderColor);
		overflow: hidden;
		transition: all 0.25s ease-in-out;
	}

	.menuMail_active {
		max-height: 3.75em;
		padding: 0.25em;
		opacity: 1;
	}

	.buttonCopySend {
		display: grid;
		grid-template-columns: 1.5em 1fr;
		place-items: center center;
		column-gap: 1em;
		font-size: 0.7em;
		width: 100%;
		padding: 0.15em 0.3em;
		font-family: var(--fontFamily);
		border: none;
		transition: all 0.25s ease-in-out;
		cursor: pointer;
		text-decoration: none;
		color: var(--backgroundColor);
		background-color: transparent;

		&:hover {
			background-color: var(--backgroundColor);
			color: var(--primaryColor);
		}
	}

	.tooltipCopy {
		position: absolute;
		top: -3.5em;
		left: -0.5em;
		width: 10em;
		color: var(--backgroundColor);
		font-size: 0.7em;
		font-weight: 500;
		text-align: center;
		border-radius: 0.235em;
		background-color: var(--secondaryColor);
		padding: 0.35em 0.5em;
		transform: translateY(4em) scale(0.7);
		transition: all 0.3s ease-in-out;
		line-height: 1.2em;
		opacity: 0;

		&::after {
			position: absolute;
			bottom: -0.3em;
			left: 4.5em;
			content: "";
			border-bottom: 0.8em solid var(--secondaryColor);
			border-left: 0.8em transparent;
			border-right: 0.8em solid transparent;
			transform: rotate(-45deg);
		}
	}

	.tooltipCopyMove {
		opacity: 1;
		transform: translateY(0em) scale(1);
	}
</style>
