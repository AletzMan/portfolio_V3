---
interface Props {
	title: string
}
const { title } = Astro.props
import TabIcon from "../svg/TabIcon.astro"
import AddIcon from "../svg/AddIcon.astro"
import ArrowUpIcon from "../svg/ArrowUpIcon.astro"
import PanelIcon from "../svg/PanelIcon.astro"
import ArrowLeftIcon from "../svg/ArrowLeftIcon.astro"
---

<section class="section">
	<header class="section_header">
		<div class="section_buttons">
			<div class="section_circle"></div>
			<div class="section_circle"></div>
			<div class="section_circle"></div>
			<div class="section_buttons-options">
				<PanelIcon class="section_icon" />
				<ArrowLeftIcon class="section_icon" />
				<ArrowLeftIcon class="section_icon section_icon-arrowRight" />
			</div>
		</div>
		<!-- <div class="section_tab">{title}</div>-->
		<div class="section_input">{title}</div>
		<div class="section_options">
			<ArrowUpIcon class="section_icon" />
			<AddIcon class="section_icon" />
			<TabIcon class="section_icon" />
		</div>
	</header>
	<slot />
	<footer class="section_footer"></footer>
</section>

<style>
	.section {
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;
		min-height: calc(100svh - 6.5em);
		margin: 5em 0 0 0;
		color: currentColor;
		border-radius: var(--borderRadius);
		backdrop-filter: blur(4px);
		border: 1px solid var(--borderColor);
		z-index: 1;
		overflow: hidden;
	}

	.section_header {
		display: flex;
		align-items: center;
		justify-content: center;
		position: fixed;
		top: 0;
		width: 100%;
		height: 1.75em;
		background-color: var(--borderColor);
	}

	.section_options {
		display: flex;
		align-items: center;
		justify-content: center;
		column-gap: 0.25em;
		position: absolute;
		right: 0;
		padding: 0 0.5em 0 0;
	}

	.section_icon {
		width: 1em;
		height: 1em;
		opacity: 0.35;
	}

	.section_icon-arrowRight {
		transform: rotate(180deg) scale(1.4);
	}

	.section_buttons {
		display: flex;
		align-items: center;
		justify-content: center;
		column-gap: 0.25em;
		position: absolute;
		left: 0;
		padding: 0 0 0 0.75em;
		height: 100%;

		& .section_buttons-options {
			display: flex;
			align-items: center;
			justify-content: center;
			column-gap: 0.5em;
			height: 100%;
			padding: 0 0 0 1.5em;
		}
	}

	.section_circle {
		width: 0.6em;
		height: 0.6em;
		border-radius: 2em;
		border: 1px solid var(--borderColor);
		background-color: var(--borderColor);

		&:nth-child(1) {
			background-color: red;
		}
		&:nth-child(2) {
			background-color: yellow;
		}
		&:nth-child(3) {
			background-color: yellowgreen;
		}
	}

	.section_tab {
		display: flex;
		align-items: center;
		justify-content: center;
		position: absolute;
		left: 5em;
		bottom: 0;
		width: 8em;
		height: 1.4em;
		/*background-color: var(--tabColor);*/

		&::after,
		&::before {
			content: "";
			position: absolute;
			top: -1px;
			height: 100%;
			width: 0.85em;
			border-top: 1px solid var(--borderColor);
			/*transition: all 250ms ease;*/
		}

		&::after {
			border-radius: 0.25em 0 0 0;
			left: -0.5em;
			transform: skew(-25deg, 0deg);
			box-shadow:
				rgba(0, 0, 0, 0.1) -3px 2px 5px,
				inset rgba(255, 255, 255, 0.09) 1px 0;
		}

		&::before {
			border-radius: 0 0.25em 0 0;
			right: -0.5em;
			transform: skew(25deg, 0deg);
			box-shadow:
				rgba(0, 0, 0, 0.1) 3px 2px 5px,
				inset rgba(255, 255, 255, 0.09) -1px 0;
		}
	}

	.section_input {
		display: flex;
		align-items: center;
		justify-content: center;
		height: 1.5em;
		width: 60%;
		font-size: 0.85em;
		padding: 0 0.5em;
		text-transform: uppercase;
		letter-spacing: 4px;
		border-radius: var(--borderRadius);
		border: 1px solid var(--borderColor);
		background-color: var(--borderColor);
		box-shadow: inset rgba(89, 89, 89, 0.2) 0 0 2px 1px;
	}

	.section_footer {
		position: fixed;
		bottom: 0;
		width: 100%;
		height: 1em;
		background-color: var(--borderColor);
	}
</style>
